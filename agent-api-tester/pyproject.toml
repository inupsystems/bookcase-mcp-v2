[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "api-agent"
version = "0.1.0"
description = "Transform OpenAPI/Swagger specs into MCP tools for LLM agents"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "API-Agent Team"},
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "httpx>=0.25.0",
    "pydantic>=2.4.0",
    "jsonschema>=4.19.0",
    "click>=8.1.0",
    "uvicorn>=0.24.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.0",
    "jsonpath-ng>=1.6.0",
    "tenacity>=8.2.0",
    "structlog>=23.1.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.5.0",
    "ruff>=0.0.290",
    "black>=23.7.0",
    "responses>=0.23.0",
    "rich>=13.0.0",
]

[project.scripts]
api-agent = "api_agent.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/api_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["B011", "F401", "F811"]

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
