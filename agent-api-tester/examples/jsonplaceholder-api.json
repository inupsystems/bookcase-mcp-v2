{
  "openapi": "3.0.0",
  "info": {
    "title": "JSONPlaceholder API",
    "description": "Free fake API for testing and prototyping",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://jsonplaceholder.typicode.com",
      "description": "JSONPlaceholder server"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "operationId": "list_posts",
        "summary": "Get all posts",
        "description": "Retrieve a list of all posts",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Filter posts by user ID",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          },
          {
            "name": "_limit",
            "in": "query",
            "description": "Limit the number of posts returned",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_post",
        "summary": "Create a new post",
        "description": "Create a new post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "get_post",
        "summary": "Get a specific post",
        "description": "Retrieve a specific post by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "operationId": "update_post",
        "summary": "Update a post",
        "description": "Update an existing post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_post",
        "summary": "Delete a post",
        "description": "Delete a specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "list_users",
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "get_user",
        "summary": "Get a specific user",
        "description": "Retrieve a specific user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Post ID"
          },
          "userId": {
            "type": "integer",
            "description": "User ID who created the post"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "body": {
            "type": "string",
            "description": "Post content"
          }
        },
        "required": ["id", "userId", "title", "body"]
      },
      "NewPost": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID who creates the post"
          },
          "title": {
            "type": "string",
            "description": "Post title",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "description": "Post content",
            "minLength": 1
          }
        },
        "required": ["userId", "title", "body"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number"
          },
          "website": {
            "type": "string",
            "description": "User's website"
          }
        },
        "required": ["id", "name", "username", "email"]
      }
    }
  }
}
